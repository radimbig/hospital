// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kamsoft.Database;

#nullable disable

namespace kamsoft.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20250523161704_fixed credential table error")]
    partial class fixedcredentialtableerror
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("kamsoft.Models.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DoctorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("kamsoft.Models.Credentials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("kamsoft.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PersonType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasDiscriminator<string>("PersonType").HasValue("Person");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("kamsoft.Models.Person+Simple", b =>
                {
                    b.HasBaseType("kamsoft.Models.Person");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Simple");
                });

            modelBuilder.Entity("kamsoft.Models.Person+WithPesel", b =>
                {
                    b.HasBaseType("kamsoft.Models.Person");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Persons", t =>
                        {
                            t.Property("Name")
                                .HasColumnName("WithPesel_Name");

                            t.Property("Surname")
                                .HasColumnName("WithPesel_Surname");
                        });

                    b.HasDiscriminator().HasValue("WithPesel");
                });

            modelBuilder.Entity("kamsoft.Models.Person+WithPeselAndRole", b =>
                {
                    b.HasBaseType("kamsoft.Models.Person");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Persons", t =>
                        {
                            t.Property("Name")
                                .HasColumnName("WithPeselAndRole_Name");

                            t.Property("Pesel")
                                .HasColumnName("WithPeselAndRole_Pesel");

                            t.Property("Surname")
                                .HasColumnName("WithPeselAndRole_Surname");
                        });

                    b.HasDiscriminator().HasValue("WithPeselAndRole");
                });

            modelBuilder.Entity("kamsoft.Models.Person+WithRole", b =>
                {
                    b.HasBaseType("kamsoft.Models.Person");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Persons", t =>
                        {
                            t.Property("Name")
                                .HasColumnName("WithRole_Name");

                            t.Property("Role")
                                .HasColumnName("WithRole_Role");

                            t.Property("Surname")
                                .HasColumnName("WithRole_Surname");
                        });

                    b.HasDiscriminator().HasValue("WithRole");
                });

            modelBuilder.Entity("kamsoft.Models.Appointment", b =>
                {
                    b.HasOne("kamsoft.Models.Person", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("kamsoft.Models.Person", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.OwnsOne("kamsoft.Models.Slot", "Slot", b1 =>
                        {
                            b1.Property<Guid>("AppointmentId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("End")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("datetime(6)");

                            b1.HasKey("AppointmentId");

                            b1.ToTable("Appointments");

                            b1.WithOwner()
                                .HasForeignKey("AppointmentId");
                        });

                    b.Navigation("Doctor");

                    b.Navigation("Patient");

                    b.Navigation("Slot")
                        .IsRequired();
                });

            modelBuilder.Entity("kamsoft.Models.Credentials", b =>
                {
                    b.HasOne("kamsoft.Models.Person", "Person")
                        .WithOne()
                        .HasForeignKey("kamsoft.Models.Credentials", "PersonId");

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
